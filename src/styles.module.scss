@import './styles/task', './styles/scroll', './styles/iconButton';

$transparancies: (
  '80': 0.8,
  '60': 0.6,
  '40': 0.4,
  '20': 0.2,
  '10': 0.1,
);

@mixin makeTransparentColors($prefix, $value) {
  @each $name, $tp in $transparancies {
    --#{$prefix}-#{$name}: #{'rgba(' + $value + ',' + $tp + ')'};
  }
}

:root {
  // --primary: rgb(130, 46, 203);
  --primary: rgb(16, 16, 16);
  @include makeTransparentColors('primary', '16, 16, 16');

  --secondary: rgb(32, 32, 32);
  @include makeTransparentColors('secondary', '32, 32, 32');

  --info: rgb(51, 136, 255);
  @include makeTransparentColors('info', '51, 136, 255');

  --positive: rgb(95, 186, 34);
  @include makeTransparentColors('positive', '95, 186, 34');

  --attention: rgb(255, 137, 11);
  @include makeTransparentColors('attention', '255, 137, 11');

  --negative: rgb(223, 17, 17);
  @include makeTransparentColors('negative', '223, 17, 17');

  --medium: rgb(128, 128, 128);
  @include makeTransparentColors('medium', '128, 128, 128');

  --header-height: 96px;

  overflow: hidden;
}

body {
  color: var(--dark);
  min-width: 1280px;
}

body[data-theme='light'] {
  --light: rgb(255, 255, 255);
  @include makeTransparentColors('light', '255, 255, 255');

  --dark: rgb(16, 16, 16);
  @include makeTransparentColors('dark', '16, 16, 16');

  --header-inner-color: rgb(64, 64, 64);

  background-color: var(--dark-10);
}

body[data-theme='dark'] {
  --light: rgb(16, 16, 16);
  @include makeTransparentColors('light', '16, 16, 16');

  --dark: rgb(236, 236, 236);
  @include makeTransparentColors('dark', '236, 236, 236');

  --header-inner-color: rgb(32, 32, 32);

  background-color: rgb(24, 24, 24);
}

.header {
  position: sticky;
  display: flex;
  align-items: center;
  justify-content: space-between;
  top: 0;
  left: 0;
  width: 100%;
  padding: 24px;
  min-height: var(--header-height);
  background-color: var(--primary);
  background: radial-gradient(var(--header-inner-color), var(--primary));
  border-radius: 0 0 24px 24px;
  box-shadow: 0 8px 16px var(--primary-20);
  z-index: 10;

  border-bottom: 2px solid var(--dark-10);
}

.taskContainer {
  position: relative;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  min-height: calc(100vh - var(--header-height) - 1px);
  max-height: calc(100vh - var(--header-height) - 1px);

  .headings {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    transform: translateY(-75%);
    z-index: 11;

    .head {
      display: flex;
      justify-content: center;
      // filter: drop-shadow(0px 0px 8px var(--primary-40));
    }
  }

  :global {
    .column {
      display: flex;
      flex-direction: column;
      gap: 24px;
      padding: 24px;
      min-height: calc(100vh - var(--header-height) - 1px);
      max-height: calc(100vh - var(--header-height) - 1px);
      border-right: 2px solid var(--dark-10);
      overflow-x: hidden;
      overflow-y: auto;

      &:last-child {
        border-right: none;
      }

      @include scrollbar;
    }
  }
}
